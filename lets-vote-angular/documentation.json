{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "StoreService",
            "id": "injectable-StoreService-71ada5c66f45ebf3c0d9c99f59ead4cc",
            "file": "src/store.service.ts",
            "properties": [
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "title",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [
                {
                    "name": "setOptions",
                    "args": [
                        {
                            "name": "threeOptions",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "threeOptions",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class StoreService {\r\n  options: string[] = [];\r\n  title: string = \"\"\r\n\r\n  setOptions(threeOptions: number) {\r\n    if (threeOptions) {\r\n      this.options = ['Sim', 'Não', 'Talvez'];\r\n    } else {\r\n      this.options = ['Sim', 'Não'];\r\n    }\r\n  }\r\n}",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-d425f55bf74dd961eb9ceeab61e3c20a",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<voting-container></voting-container>\r\n\r\n"
        },
        {
            "name": "BoothComponent",
            "id": "component-BoothComponent-3a6c457992fd61a3420fa743ab3db8d7",
            "file": "src/components/booth/booth.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "booth",
            "styleUrls": [
                "./booth.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./booth.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "vote",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'booth',\r\n  templateUrl: './booth.component.html',\r\n  styleUrls: ['./booth.component.css']\r\n})\r\n\r\nexport class BoothComponent {\r\n  @Input() options: any[] = [];\r\n  @Output() vote = new EventEmitter();\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".booth-container {\r\n  display: flex;\r\n  justify-content: space-around;\r\n}\r\n\r\nbutton {\r\n  width: 7rem;\r\n  height: 2.5rem;\r\n  margin-top: 2rem;\r\n  margin-bottom: 2rem;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #5965e0;\r\n  color: #fff;\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\nbutton:hover {\r\n  background: #4953b8;\r\n}",
                    "styleUrl": "./booth.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"booth-container\">\r\n  <button *ngFor=\"let option of options; index as i\" (click)=\"vote.emit(i)\">{{ option }}</button>\r\n</div>"
        },
        {
            "name": "ResultComponent",
            "id": "component-ResultComponent-8146b0fc1929d321183c2a26bba870bf",
            "file": "src/components/result/result.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "result",
            "styleUrls": [
                "./result.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./result.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "votes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "calculatePercentage",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'result',\r\n  templateUrl: './result.component.html',\r\n  styleUrls: ['./result.component.css']\r\n})\r\n\r\nexport class ResultComponent {\r\n  @Input() votes: any[] = [];\r\n\r\n  get total() {\r\n    let total = this.votes.reduce((x, y) => x + y.count, 0);\r\n\r\n    if (total == 0) {\r\n      return 1;\r\n    }\r\n\r\n    return total;\r\n  }\r\n\r\n  calculatePercentage(value: number) {\r\n    return Math.round(100 * value / this.total);\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./result.component.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "total": {
                    "name": "total",
                    "getSignature": {
                        "name": "total",
                        "type": "",
                        "returnType": "",
                        "line": 12
                    }
                }
            },
            "templateData": "<div>\r\n  <p *ngFor=\"let vote of votes; index as i\">\r\n    {{i + 1}}. {{vote.option}} - {{vote.count}} votos ({{calculatePercentage(vote.count)}}%)\r\n  </p>\r\n</div>"
        },
        {
            "name": "VotingCardComponent",
            "id": "component-VotingCardComponent-f3e0512157c008334f2f03b6163613be",
            "file": "src/components/votingCard/votingCard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "voting-card",
            "styleUrls": [
                "./votingCard.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./votingCard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "status",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "store",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoreService",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "votes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onVote",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\r\nimport { StoreService } from \"src/store.service\";\r\n\r\n@Component({\r\n  selector: 'voting-card',\r\n  templateUrl: './votingCard.component.html',\r\n  styleUrls: ['./votingCard.component.css']\r\n})\r\n\r\nexport class VotingCardComponent {\r\n  constructor(public store: StoreService) { }\r\n\r\n  @Input() status: string = '';\r\n  votes: { option: string, count: number }[] = [];\r\n\r\n  ngOnInit() {\r\n    this.votes = this.store.options.map(option => {\r\n      return {\r\n        option: option,\r\n        count: 0,\r\n      };\r\n    });\r\n  }\r\n\r\n  onVote(index: number) {\r\n    this.votes[index].count++;\r\n    this.status = 'closed';\r\n  }\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./votingCard.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"card-container\">\r\n  <h2 class=\"title\">{{store.title}}</h2>\r\n    <div *ngIf=\"status === 'open'; else result\">\r\n      <booth [options]=\"store.options\" (vote)=\"onVote($event)\"></booth>\r\n    </div>\r\n    <ng-template #result>\r\n      <result [votes]=\"votes\"></result>\r\n    </ng-template> \r\n</div>\r\n"
        },
        {
            "name": "VotingContainerComponent",
            "id": "component-VotingContainerComponent-b2f52a503c1bf9b129580c6150e8a6c7",
            "file": "src/components/votingContainer/votingContainer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "voting-container",
            "styleUrls": [
                "./votingContainer.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./votingContainer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isStarted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "status",
                    "defaultValue": "'open'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'voting-container',\r\n  templateUrl: './votingContainer.component.html',\r\n  styleUrls: ['./votingContainer.component.css']\r\n})\r\n\r\nexport class VotingContainerComponent {\r\n  isStarted = false;\r\n  status = 'open';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./votingContainer.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"overlay\">\r\n  <div *ngIf=\"isStarted; else form\">\r\n    <voting-card [status]=\"status\"></voting-card>\r\n  </div>\r\n  <ng-template #form>\r\n    <voting-form (start)=\"isStarted = true\"></voting-form>\r\n  </ng-template> \r\n</div>"
        },
        {
            "name": "VotingFormComponent",
            "id": "component-VotingFormComponent-4b4455eccdff7eb16301505bb56ff6c7",
            "file": "src/components/votingForm/votingForm.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "voting-form",
            "styleUrls": [
                "./votingForm.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./votingForm.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "start",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "store",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoreService",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "threeOptions",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "handleSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { StoreService } from \"src/store.service\";\r\n\r\n@Component({\r\n  selector: 'voting-form',\r\n  templateUrl: './votingForm.component.html',\r\n  styleUrls: ['./votingForm.component.css']\r\n})\r\n\r\nexport class VotingFormComponent {\r\n  constructor(public store: StoreService) { }\r\n\r\n  @Output() start = new EventEmitter();\r\n\r\n  title = '';\r\n  threeOptions = '';\r\n\r\n  handleSubmit() {\r\n    this.store.title = this.title;\r\n    this.store.setOptions(Number(this.threeOptions));\r\n\r\n    this.start.emit(\"start\");\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".form-field {\r\n  text-align: left;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.form-field input, select {\r\n  display: block;\r\n  width: 100%;\r\n  height: 2rem;\r\n  margin-top: 0.5rem;\r\n  margin-bottom: 0.5rem;\r\n  color: #2e384d;\r\n  border: solid 1px #666666;\r\n  border-radius: 5px;\r\n}\r\n\r\n.form-field input:focus-visible:not(.field-invalid), select:focus-visible {\r\n  outline: #2e384d auto 1px;\r\n}\r\n\r\n.form-field span {\r\n  font-size: 0.9rem;\r\n  color: #D65151;\r\n}\r\n\r\ninput.ng-invalid.ng-touched, select.ng-invalid.ng-touched {\r\n  border: solid 1px #D65151 !important;\r\n}\r\n\r\n.ng-invalid:focus-visible {\r\n  outline: #D65151 auto 1px;\r\n}\r\n\r\n.form-field select {\r\n  height: 2.25rem;\r\n}\r\n",
                    "styleUrl": "./votingForm.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"card-container\">\r\n  <h2 class=\"title\">Inicie uma votação</h2>\r\n    <form #voteForm=\"ngForm\" (ngSubmit)=\"voteForm.form.valid && handleSubmit()\" >\r\n      <div class=\"form-field\">\r\n        <label>Título:</label>\r\n        <input\r\n          #input=\"ngModel\"\r\n          name=\"input\"\r\n          type=\"text\"\r\n          placeholder=\"O que gostaria de perguntar?\"\r\n          [(ngModel)]=\"title\"\r\n          required\r\n          maxlength=\"30\"\r\n        />\r\n        <div *ngIf=\"input.invalid && input.touched\">\r\n          <span *ngIf=\"input.errors!.required\">\r\n            Título é obrigatório.\r\n          </span>\r\n          <span *ngIf=\"input.errors!.maxlength\">\r\n            Máximo de 30 caracteres\r\n          </span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"form-field\">\r\n        <label>Opções de voto:</label>\r\n        <select \r\n          name=\"select\"\r\n          #select=\"ngModel\"\r\n          [(ngModel)]=\"threeOptions\"\r\n          required\r\n        >\r\n          <option value=\"0\">Sim, não</option>\r\n          <option value=\"1\">Sim, não, talvez</option>\r\n        </select>\r\n        <div *ngIf=\"select.invalid && select.touched\">\r\n          <span *ngIf=\"select.errors!.required\">\r\n            Opções são obrigatórias.\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\">Começar</button>\r\n    </form>\r\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-1a34e6e90dad815c2f3eab592a825c7c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms'\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BoothComponent } from '../components/booth/booth.component';\r\nimport { ResultComponent } from '../components/result/result.component';\r\nimport { VotingCardComponent } from '../components/votingCard/votingCard.component';\r\nimport { VotingFormComponent } from '../components/votingForm/votingForm.component';\r\nimport { VotingContainerComponent } from '../components/votingContainer/votingContainer.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    VotingContainerComponent,\r\n    VotingFormComponent,\r\n    VotingCardComponent,\r\n    BoothComponent,\r\n    ResultComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "BoothComponent"
                        },
                        {
                            "name": "ResultComponent"
                        },
                        {
                            "name": "VotingCardComponent"
                        },
                        {
                            "name": "VotingContainerComponent"
                        },
                        {
                            "name": "VotingFormComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Demo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/VotingContainer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "Exemplo1",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Result.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Exemplo2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Result.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SimNão",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Booth.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SimNãoTalvez",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Booth.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Booth.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<BoothComponent>",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Result.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ResultComponent>",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/VotingContainer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<VotingContainerComponent>",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/VotingContainer.stories.ts": [
                {
                    "name": "Demo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/VotingContainer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/VotingContainer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<VotingContainerComponent>",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "src/stories/Result.stories.ts": [
                {
                    "name": "Exemplo1",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Result.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Exemplo2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Result.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Result.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ResultComponent>",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Booth.stories.ts": [
                {
                    "name": "SimNão",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Booth.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SimNãoTalvez",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Booth.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Booth.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<BoothComponent>",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/booth/booth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BoothComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/components/result/result.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResultComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/components/votingCard/votingCard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VotingCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/components/votingContainer/votingContainer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VotingContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/components/votingForm/votingForm.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VotingFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StoreService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/Booth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimNão",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Booth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimNãoTalvez",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Booth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Result.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Exemplo1",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Result.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Exemplo2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Result.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/VotingContainer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Demo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/VotingContainer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}